{
  "name": "background-circles",
  "type": "registry:component",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { motion } from \"motion/react\";\r\nimport clsx from \"clsx\";\r\nimport { useState } from \"react\";\r\n\r\ninterface BackgroundCirclesProps {\r\n    title?: string;\r\n    description?: string;\r\n    className?: string;\r\n    variant?: keyof typeof COLOR_VARIANTS;\r\n}\r\n\r\nconst COLOR_VARIANTS = {\r\n    primary: {\r\n        border: [\r\n            \"border-emerald-500/60\",\r\n            \"border-cyan-400/50\",\r\n            \"border-slate-600/30\",\r\n        ],\r\n        gradient: \"from-emerald-500/30\",\r\n    },\r\n    secondary: {\r\n        border: [\r\n            \"border-violet-500/60\",\r\n            \"border-fuchsia-400/50\",\r\n            \"border-slate-600/30\",\r\n        ],\r\n        gradient: \"from-violet-500/30\",\r\n    },\r\n    tertiary: {\r\n        border: [\r\n            \"border-orange-500/60\",\r\n            \"border-yellow-400/50\",\r\n            \"border-slate-600/30\",\r\n        ],\r\n        gradient: \"from-orange-500/30\",\r\n    },\r\n    quaternary: {\r\n        border: [\r\n            \"border-purple-500/60\",\r\n            \"border-pink-400/50\",\r\n            \"border-slate-600/30\",\r\n        ],\r\n        gradient: \"from-purple-500/30\",\r\n    },\r\n    quinary: {\r\n        border: [\r\n            \"border-red-500/60\",\r\n            \"border-rose-400/50\",\r\n            \"border-slate-600/30\",\r\n        ],\r\n        gradient: \"from-red-500/30\",\r\n    }, // red\r\n    senary: {\r\n        border: [\r\n            \"border-blue-500/60\",\r\n            \"border-sky-400/50\",\r\n            \"border-slate-600/30\",\r\n        ],\r\n        gradient: \"from-blue-500/30\",\r\n    }, // blue\r\n    septenary: {\r\n        border: [\r\n            \"border-gray-500/60\",\r\n            \"border-gray-400/50\",\r\n            \"border-slate-600/30\",\r\n        ],\r\n        gradient: \"from-gray-500/30\",\r\n    },\r\n    octonary: {\r\n        border: [\r\n            \"border-red-500/60\",\r\n            \"border-rose-400/50\",\r\n            \"border-slate-600/30\",\r\n        ],\r\n        gradient: \"from-red-500/30\",\r\n    },\r\n} as const;\r\n\r\nconst AnimatedGrid = () => (\r\n    <motion.div\r\n        className=\"absolute inset-0 [mask-image:radial-gradient(ellipse_at_center,transparent_30%,black)]\"\r\n        animate={{\r\n            backgroundPosition: [\"0% 0%\", \"100% 100%\"],\r\n        }}\r\n        transition={{\r\n            duration: 40,\r\n            repeat: Number.POSITIVE_INFINITY,\r\n            ease: \"linear\",\r\n        }}\r\n    >\r\n        <div className=\"h-full w-full [background-image:repeating-linear-gradient(100deg,#64748B_0%,#64748B_1px,transparent_1px,transparent_4%)] opacity-20\" />\r\n    </motion.div>\r\n);\r\n\r\nexport function BackgroundCircles({\r\n    title = \"Background Circles\",\r\n    description = \"Optional Description\",\r\n    className,\r\n    variant = \"octonary\",\r\n}: BackgroundCirclesProps) {\r\n    const variantStyles = COLOR_VARIANTS[variant];\r\n\r\n    const variants = Object.keys(\r\n        COLOR_VARIANTS\r\n    ) as (keyof typeof COLOR_VARIANTS)[];\r\n\r\n    return (\r\n        <div\r\n            className={clsx(\r\n                \"relative flex h-screen w-full items-center justify-center overflow-hidden\",\r\n                \"bg-white dark:bg-black/5\",\r\n                className\r\n            )}\r\n        >\r\n            <AnimatedGrid />\r\n            <motion.div className=\"absolute h-[480px] w-[480px]\">\r\n                {[0, 1, 2].map((i) => (\r\n                    <motion.div\r\n                        key={i}\r\n                        className={clsx(\r\n                            \"absolute inset-0 rounded-full\",\r\n                            \"border-2 bg-linear-to-br to-transparent\",\r\n                            variantStyles.border[i],\r\n                            variantStyles.gradient\r\n                        )}\r\n                        animate={{\r\n                            rotate: 360,\r\n                            scale: [1, 1.05 + i * 0.05, 1],\r\n                            opacity: [0.8, 1, 0.8],\r\n                        }}\r\n                        transition={{\r\n                            duration: 5,\r\n                            repeat: Number.POSITIVE_INFINITY,\r\n                            ease: \"easeInOut\",\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={clsx(\r\n                                \"absolute inset-0 rounded-full mix-blend-screen\",\r\n                                `bg-[radial-gradient(ellipse_at_center,${variantStyles.gradient.replace(\r\n                                    \"from-\",\r\n                                    \"\"\r\n                                )}/10%,transparent_70%)]`\r\n                            )}\r\n                        />\r\n                    </motion.div>\r\n                ))}\r\n            </motion.div>\r\n\r\n            <motion.div\r\n                className=\"relative z-10 text-center\"\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.8, ease: \"easeOut\" }}\r\n            >\r\n                <h1\r\n                    className={clsx(\r\n                        \"text-5xl font-bold tracking-tight md:text-7xl\",\r\n                        \"bg-linear-to-b from-slate-950 to-slate-700 dark:from-slate-100 dark:to-slate-300 bg-clip-text text-transparent\",\r\n                        \"drop-shadow-[0_0_32px_rgba(94,234,212,0.4)]\"\r\n                    )}\r\n                >\r\n                    {title}\r\n                </h1>\r\n\r\n                <motion.p\r\n                    className=\"mt-6 text-lg md:text-xl dark:text-white text-slate-950\"\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ delay: 0.2 }}\r\n                >\r\n                    {description}\r\n                    <span className=\"mx-3 opacity-50\">Â·</span>\r\n                    Eatech UI\r\n                </motion.p>\r\n            </motion.div>\r\n\r\n            <div className=\"absolute inset-0 [mask-image:radial-gradient(90%_60%_at_50%_50%,#000_40%,transparent)]\">\r\n                <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_center,#0F766E/30%,transparent_70%)] blur-[120px]\" />\r\n                <div className=\"absolute inset-0 bg-[radial-gradient(ellipse_at_center,#2DD4BF/15%,transparent)] blur-[80px]\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function DemoCircles() {\r\n    const [currentVariant, setCurrentVariant] =\r\n        useState<keyof typeof COLOR_VARIANTS>(\"octonary\");\r\n\r\n    const variants = Object.keys(\r\n        COLOR_VARIANTS\r\n    ) as (keyof typeof COLOR_VARIANTS)[];\r\n\r\n    function getNextVariant() {\r\n        const currentIndex = variants.indexOf(currentVariant);\r\n        const nextVariant = variants[(currentIndex + 1) % variants.length];\r\n        return nextVariant;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BackgroundCircles variant={currentVariant} />\r\n            <div className=\"absolute top-12 right-12\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"bg-slate-950 dark:bg-white text-white dark:text-slate-950 px-4 py-1 rounded-md z-10 text-sm font-medium\"\r\n                    onClick={() => {\r\n                        setCurrentVariant(getNextVariant());\r\n                    }}\r\n                >\r\n                    Change Variant\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n}",
      "path": "/components/eatechUI/background-circles.tsx",
      "target": "/components/eatechUI/background-circles.tsx"
    }
  ]
}